{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\defi-staking-app-starter\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereuem) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                //윈도우 창에서 이더리움이 감지되었을때\n                window.web3 = new Web3(window.ethereuem);\n                _context2.next = 4;\n                return window.ethereuem.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No ethereum browser detected! check out Metamask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                account = web3.eth.getAccounts(); //블록체인 데이터에서 계좌불러옴\n\n                console.log(account);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0' //default\n\n    };\n    return _this;\n  } //리액트 코드 작성\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","App","loadWeb3","loadBlockchainData","window","ethereuem","web3","enable","currentProvider","alert","account","eth","getAccounts","console","log","props","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,G;;;;;;;;;;;;uBAGQ,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;qBAIHC,MAAM,CAACC,S;;;;;AAAW;AACjBD,gBAAAA,MAAM,CAACE,IAAP,GAAY,IAAIN,IAAJ,CAASI,MAAM,CAACC,SAAhB,CAAZ;;uBACMD,MAAM,CAACC,SAAP,CAAiBE,MAAjB,E;;;;;;;AACP,oBAAGH,MAAM,CAACE,IAAV,EAAe;AAClBF,kBAAAA,MAAM,CAACE,IAAP,GAAY,IAAIN,IAAJ,CAASI,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAZ;AACH,iBAFM,MAED;AACFJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,mDAAb;AACH;;;;;;;;;;;;;;;;;;;;;;;;;AAGSH,gBAAAA,I,GAAKF,MAAM,CAACE,I;AACZI,gBAAAA,O,GAAQJ,IAAI,CAACK,GAAL,CAASC,WAAT,E,EAAwB;;AACtCC,gBAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;;;;;;;;;;;;;;;;;;AAGJ,eAAYK,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTN,MAAAA,OAAO,EAAE,KADA,CACM;;AADN,KAAb;AAFe;AAKlB,G,CAED;;;;;6BACQ;AACJ,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKM,KAAL,CAAWN,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,CADJ;AAQH;;;;EAxCaZ,S;;AA2ClB,eAAeG,GAAf","sourcesContent":["import React,{Component} from 'react'\r\nimport './App.css'\r\nimport Navbar from './Navbar';\r\nimport Web3 from 'web3';\r\n\r\nclass App extends Component {\r\n\r\n    async UNSAFE_componentWillMount(){  //렌더링하기전에 최우선으로 불러오게함\r\n        await this.loadWeb3()\r\n        await this.loadBlockchainData()\r\n    }\r\n\r\n    async loadWeb3(){\r\n        if(window.ethereuem){//윈도우 창에서 이더리움이 감지되었을때\r\n            window.web3=new Web3(window.ethereuem)\r\n            await window.ethereuem.enable() //이더리움 활성화\r\n    } else if(window.web3){\r\n        window.web3=new Web3(window.web3.currentProvider)\r\n    } else{\r\n        window.alert('No ethereum browser detected! check out Metamask!')\r\n    }\r\n}\r\n    async loadBlockchainData(){\r\n        const web3=window.web3\r\n        const account=web3.eth.getAccounts()  //블록체인 데이터에서 계좌불러옴\r\n        console.log(account)\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            account: '0x0' //default\r\n        }\r\n    }\r\n    \r\n    //리액트 코드 작성\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navbar account={this.state.account}/>\r\n                <div className='text-center'>\r\n                    <h1></h1>\r\n                </div>\r\n            </div>\r\n        )    \r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}